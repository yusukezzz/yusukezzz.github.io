<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>yusukezzz weblog</title>
	<atom:link href="http://localhost/wordpress/feed" rel="self" type="application/rss+xml" />
	<link>https://www.yusukezzz.net</link>
	<description></description>
	<lastBuildDate>Tue, 16 May 2017 15:11:49 +0000</lastBuildDate>
	<language>ja</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.7.5</generator>
	<item>
		<title>無料で使える画像リサイズAPI</title>
		<link>https://www.yusukezzz.net/archives/55</link>
		<pubDate>Tue, 16 May 2017 14:55:20 +0000</pubDate>
		<dc:creator><![CDATA[yusukezzz]]></dc:creator>
				<category><![CDATA[uncategorized]]></category>
		<category><![CDATA[api]]></category>
		<category><![CDATA[free]]></category>
		<category><![CDATA[image]]></category>

		<guid isPermaLink="false">https://www.yusukezzz.net/?p=55</guid>
		<description><![CDATA[Android アプリで使うために指定した url の画像をリサイズして返してくれるAPIを探したところ、2つ [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>Android アプリで使うために指定した url の画像をリサイズして返してくれるAPIを探したところ、2つ見つけることが出来た<br />
しかもどちらも無料で利用でき、 https にも対応している<br />
登録も API key の取得も要らず、画像の url を書き換えるだけで今すぐ利用出来る</p>
<p><span id="more-55"></span></p>
<p><a href="http://zimage.io/">Zimage – Images, delivered fast&#46;</a></p>
<p><a href="http://rsz.io/">RSZ&#46;IO &#45; a free responsive image service</a></p>
<p>使い方はこんな感じ</p>
<p>http://edge.zimage.io/?url=https://s3-us-west-2.amazonaws.com/stllc/zimage/images/ferrari.png&#038;w=200</p>
<p>http://rsz.io/s3-us-west-2.amazonaws.com/stllc/zimage/images/ferrari.png?width=200</p>
<p>リサイズ機能における両者の差はほとんどないように見えるが、 zimage.io は作者が<a href="http://docs.zimage.io/faq/">FAQ</a>で述べている通り商用利用を見越した作りになっているようだ</p>
<p>どちらも <a href="https://github.com/jcupitt/libvips">jcupitt/libvips</a> を使っているためリサイズ結果は同等のはず</p>
<p>zimage.io は有料プランが準備中であり、SLAも定義されているのが特徴的（無料版は 99.95% とされている）<br />
rsz.io はこの記事執筆時点で直近112日以内のダウンタイムは約1時間であり、稼働率は 99.963% であると記載されている（ただし保証するという旨は一切書かれていない）</p>
<p>最大の違いはキャッシュの有無で、 zimage.io はリサイズ結果をキャッシュしてくれるため1歩リードしている<br />
運営者が twitter をやっていて動向が伺えるのも良い <a href="https://twitter.com/davidbyttow">David Byttow <img src="https://s.w.org/images/core/emoji/2.2.1/72x72/1f44a.png" alt="👊" class="wp-smiley" style="height: 1em; max-height: 1em;" />&#40;@davidbyttow&#41;さん &#124; Twitter</a><br />
便利なので有料プランが軌道にのって末永く存続してくれることを祈るばかりである</p>
<p>こうして書くと zimage.io が完全に上位互換に見えるが、将来性が不透明なのも確か<br />
rsz.io はそもそもマネタイズの意思が見えなくてもはや不気味なのだけど、少なくとも2014年ごろから継続して稼働しているみたいだったので選択肢として一応残した</p>
]]></content:encoded>
			</item>
		<item>
		<title>tmux 2.4 で vi 風キーバインドが invalid or unknown command と言われる</title>
		<link>https://www.yusukezzz.net/archives/46</link>
		<pubDate>Sat, 06 May 2017 16:05:07 +0000</pubDate>
		<dc:creator><![CDATA[yusukezzz]]></dc:creator>
				<category><![CDATA[uncategorized]]></category>
		<category><![CDATA[tmux]]></category>

		<guid isPermaLink="false">https://www.yusukezzz.net/?p=46</guid>
		<description><![CDATA[起動時に invalid or unknown command: bind-key -t vi-copy v  [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>起動時に</p>
<p><code>invalid or unknown command: bind-key -t vi-copy v begin-selection</code></p>
<p>などと言われる<br />
どうやら設定の書き方が変わってしまったようだ</p>
<p><a href="https://github.com/tmux/tmux/issues/754">invalid or unknown command: &#96;bind&#45;key &#45;t vi&#45;copy &#46;&#46;&#46;&#46;&#96; · Issue &#35;754 · tmux/tmux</a></p>
<p>ここの下の方に書かれているが、こんな感じにすると直った</p>
<pre><code class="shell">unbind-key -T copy-mode-vi Space     ;   bind-key -T copy-mode-vi v send-keys -X begin-selection
unbind-key -T copy-mode-vi Enter     ;   bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
unbind-key -T copy-mode-vi C-v       ;   bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
unbind-key -T copy-mode-vi [         ;   bind-key -T copy-mode-vi [ send-keys -X begin-selection
unbind-key -T copy-mode-vi ]         ;   bind-key -T copy-mode-vi ] send-keys -X copy-selection
</code></pre>
]]></content:encoded>
			</item>
		<item>
		<title>静的サイトジェネレーターを試して wordpress に戻ってみた話</title>
		<link>https://www.yusukezzz.net/archives/22</link>
		<pubDate>Fri, 05 May 2017 12:52:12 +0000</pubDate>
		<dc:creator><![CDATA[yusukezzz]]></dc:creator>
				<category><![CDATA[uncategorized]]></category>
		<category><![CDATA[php]]></category>
		<category><![CDATA[wordpress]]></category>

		<guid isPermaLink="false">https://www.yusukezzz.net/?p=22</guid>
		<description><![CDATA[これまで jekyll, middleman, hugo などの静的サイトジェネレーターを試してきたけど、どう [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>これまで jekyll, middleman, hugo などの静的サイトジェネレーターを試してきたけど、どうにも CLI で編集・管理する作業に慣れず長続きしなかった</p>
<p>調べてみると GUI を持ったものもいくつか存在したが情報が少なそうだったので結局ローカルPCで wordpress を使って静的サイトを出力するという、本末転倒気味なことを試してみることにした</p>
<p>途中、静的サイトジェネレーターに慣れた方が良かったのでは…？と思わないでもなかったが、一応それなりな環境が出来てしまったので作業の記録を残しておく</p>
<p><span id="more-22"></span></p>
<h3>注意点</h3>
<ul>
<li>当然ながら標準のコメント機能は完全に機能しなくなる</li>
<li>wordpress 上で記事を削除しても出力済みの静的ファイルまでは消してくれないので対応が必要</li>
<li>タグやカテゴリにマルチバイト文字を使っていると正しくリンクされない</li>
<li><strong>静的ファイルの出力が非常に遅い（全てのサイト内ページにHTTPリクエストを投げてHTML化しているため）</strong></li>
</ul>
<h3>設定方法</h3>
<p>wordpress の詳細なインストール方法は割愛するが、動けばいいので osx なら標準で apache, php はインストールされているため mysql だけ用意すれば良い<br />
最新で揃えたければ適当に<br />
<code>brew install homebrew/php/php71 nginx mysql</code><br />
など</p>
<p>wordpress 自体の設定はパーマリンク設定を記事ごとに一意のURLを振る形式に必ず変更する<br />
初期設定だとGETパラメータで記事IDを指定するため静的化出来ない</p>
<p>プラグインは <a href="https://ja.wordpress.org/plugins/simply-static/">Simply Static — WordPress プラグイン</a> を入れる<br />
設定は例えばこのサイトならばリンク先に絶対URLで https://www.yusukezzz.net/ を使用する<br />
出力先は適当なローカルディレクトリで github pages の git リポジトリとして別途設定しておくと楽<br />
これだけでひとまず静的サイト生成出来るので試しに実行してみる</p>
<p>ちなみにこの blog のソースは <a href="https://github.com/yusukezzz/yusukezzz.github.io">yusukezzz/yusukezzz&#46;github&#46;io</a> で見ることが出来る</p>
<h3>ダイエット</h3>
<p>あとは git push するだけだが、恐らく余分なファイルや表示が含まれているので削りたくなるだろう<br />
出力後のファイルに不要なものが含まれていたらプラグイン設定からエクスクルードをよしなに設定しよう</p>
<p>その他以下自分が気になった点と雑な改善方法を列挙しておく<br />
（wordpress の知見がない人はあまりテーマやプラグインを弄らない方が良い）</p>
<ul>
<li>meta タグに不要なのが色々ある
<ul>
<li><a href="https://ja.wordpress.org/plugins/wp-head-cleaner/">wp&#95;head&#40;&#41; cleaner — WordPress プラグイン</a> などで削る</li>
</ul>
</li>
<li>jquery が不要なのに強制的に読み込まれている
<ul>
<li>テーマ上で <code>wp_head();</code> している箇所の前で <code>wp_deregister_script('jquery');</code> する</li>
<li>テーマによっては jquery の存在を前提に jquery-plugin を使っている場合もあるので注意</li>
</ul>
</li>
<li>rss にコメントのフィードURLも含まれている
<ul>
<li><code>wp-includes/feed-rss2.php</code> を適当に編集する</li>
</ul>
</li>
</ul>
<h3>おまけ</h3>
<p>静的ファイル生成時に git push まで自動で行う方法の例（プラグインを弄る）<br />
本当に雑なやり方なので全くおすすめしない</p>
<p>最後に呼ばれる処理である、<br />
<code>/wp-content/plugins/simply-static/includes/tasks/class-ss-wrapup-task.php</code> ファイルの<br />
<code>perform</code> メソッド内で push 操作を行う<br />
例えば<br />
<code>exec("cd /path/to/your.github.io; git add -A; git commit -m \"update\"; git push");</code><br />
など</p>
]]></content:encoded>
			</item>
		<item>
		<title>Hello world</title>
		<link>https://www.yusukezzz.net/archives/6</link>
		<comments>https://www.yusukezzz.net/archives/6#respond</comments>
		<pubDate>Wed, 03 May 2017 16:02:27 +0000</pubDate>
		<dc:creator><![CDATA[yusukezzz]]></dc:creator>
				<category><![CDATA[uncategorized]]></category>

		<guid isPermaLink="false">https://www.yusukezzz.net/?p=6</guid>
		<description><![CDATA[test echo "Hello world!";]]></description>
				<content:encoded><![CDATA[<h1>test</h1>
<pre><code class="php">echo "Hello world!";
</code></pre>
]]></content:encoded>
			</item>
	</channel>
</rss>
